name: Codecov
on: [push, pull_request]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.10'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.10
    - name: Generate coverage report
      run: |
        pip install poetry==1.1.13
        poetry install
        poetry run pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        version: "v0.1.15"
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        # files: ./coverage1.xml,./coverage2.xml
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true


#name: Codecov
#on: [push, pull_request]
#jobs:
#  test-coverage:
#    runs-on: ubuntu-latest
#    timeout-minutes: 120
#    strategy:
#      matrix:
#        python-version: ['3.10']
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          sudo apt-get update && sudo apt-get install -y gettext
#          pip install poetry
#          poetry install
#      - name: Run tests with coverage
#        run: |
#          # Start a background loop to print a message every 60 seconds
#          while true; do echo "Running tests... still working at $(date)"; sleep 60; done &
#          keep_alive=$!
#
#          # Run tests
#          poetry run pytest tests/ -v --cov=src/pydts --cov-report=xml
#          test_status=$?
#
#          # Stop keep-alive loop
#          kill $keep_alive
#
#          # Return pytest exit code
#          exit $test_status
#    - name: Upload coverage to Codecov
#      uses: codecov/codecov-action@v2
#      with:
#        version: "v0.1.15"
#        token: ${{ secrets.CODECOV_TOKEN }}
#        directory: ./coverage/reports/
#        env_vars: OS,PYTHON
#        fail_ci_if_error: true
#        # files: ./coverage1.xml,./coverage2.xml
#        files: ./coverage.xml
#        flags: unittests
#        name: codecov-umbrella
#        path_to_write_report: ./coverage/codecov_report.txt
#        verbose: true
##      - name: Upload coverage reports to Codecov
##        uses: codecov/codecov-action@v2
##        env:
##          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
##          CODECOV_VERSION: 'v0.1.15'
##        with:
##          files: coverage.xml
##          token: ${{ secrets.CODECOV_TOKEN }}
##          version: ${{ env.CODECOV_VERSION }}
##          fail_ci_if_error: true