name: Codecov
on: [push, pull_request]
jobs:
  test-DataExpansionFitter:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_DataExpansionFitter.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-EventTimesSampler:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_EventTimesSampler.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-TwoStagesFitter:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_TwoStagesFitter.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-TwoStagesFitterExact:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_TwoStagesFitterExact.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-screening:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_screening.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-model-selection:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run tests with coverage
        run: poetry run pytest tests/test_model_selection.py -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-remaining:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y gettext
          pip install poetry
          poetry install
      - name: Run remaining tests with coverage
        run: |
          poetry run pytest tests/ \
            --ignore=tests/test_DataExpansionFitter.py \
            --ignore=tests/test_EventTimesSampler.py \
            --ignore=tests/test_TwoStagesFitter.py \
            --ignore=tests/test_TwoStagesFitterExact.py \
            --ignore=tests/test_screening.py \
            --ignore=tests/test_model_selection.py \
            -v --cov=src/pydts --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
